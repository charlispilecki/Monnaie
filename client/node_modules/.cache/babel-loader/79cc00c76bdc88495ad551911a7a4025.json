{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = toCssValue;\n\nvar join = function join(value, by) {\n  var result = '';\n\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n\n  return result;\n};\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\n\n\nfunction toCssValue(value) {\n  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (!Array.isArray(value)) return value;\n  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.\n\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', '); // Add !important, because it was ignored.\n\n\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n}","map":{"version":3,"sources":["C:/Users/medic/Desktop/CodingBootCamp/Homework/Monnaie/client/node_modules/jss/lib/utils/toCssValue.js"],"names":["Object","defineProperty","exports","value","toCssValue","join","by","result","i","length","ignoreImportant","arguments","undefined","Array","isArray","cssValue"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,UAArB;;AACA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcF,KAAd,EAAqBG,EAArB,EAAyB;AAClC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACA,QAAIL,KAAK,CAACK,CAAD,CAAL,KAAa,YAAjB,EAA+B;AAC/B,QAAID,MAAJ,EAAYA,MAAM,IAAID,EAAV;AACZC,IAAAA,MAAM,IAAIJ,KAAK,CAACK,CAAD,CAAf;AACD;;AACD,SAAOD,MAAP;AACD,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,UAAT,CAAoBD,KAApB,EAA2B;AACzB,MAAIO,eAAe,GAAGC,SAAS,CAACF,MAAV,GAAmB,CAAnB,IAAwBE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA1F;AAEA,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAL,EAA2B,OAAOA,KAAP;AAE3B,MAAIY,QAAQ,GAAG,EAAf,CALyB,CAOzB;;AACA,MAAIF,KAAK,CAACC,OAAN,CAAcX,KAAK,CAAC,CAAD,CAAnB,CAAJ,EAA6B;AAC3B,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,KAAa,YAAjB,EAA+B;AAC/B,UAAIO,QAAJ,EAAcA,QAAQ,IAAI,IAAZ;AACdA,MAAAA,QAAQ,IAAIV,IAAI,CAACF,KAAK,CAACK,CAAD,CAAN,EAAW,GAAX,CAAhB;AACD;AACF,GAND,MAMOO,QAAQ,GAAGV,IAAI,CAACF,KAAD,EAAQ,IAAR,CAAf,CAdkB,CAgBzB;;;AACA,MAAI,CAACO,eAAD,IAAoBP,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,KAA4B,YAApD,EAAkE;AAChEM,IAAAA,QAAQ,IAAI,aAAZ;AACD;;AAED,SAAOA,QAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = toCssValue;\nvar join = function join(value, by) {\n  var result = '';\n  for (var i = 0; i < value.length; i++) {\n    // Remove !important from the value, it will be readded later.\n    if (value[i] === '!important') break;\n    if (result) result += by;\n    result += value[i];\n  }\n  return result;\n};\n\n/**\n * Converts array values to string.\n *\n * `margin: [['5px', '10px']]` > `margin: 5px 10px;`\n * `border: ['1px', '2px']` > `border: 1px, 2px;`\n * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`\n * `color: ['red', !important]` > `color: red !important;`\n */\nfunction toCssValue(value) {\n  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!Array.isArray(value)) return value;\n\n  var cssValue = '';\n\n  // Support space separated values via `[['5px', '10px']]`.\n  if (Array.isArray(value[0])) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '!important') break;\n      if (cssValue) cssValue += ', ';\n      cssValue += join(value[i], ' ');\n    }\n  } else cssValue = join(value, ', ');\n\n  // Add !important, because it was ignored.\n  if (!ignoreImportant && value[value.length - 1] === '!important') {\n    cssValue += ' !important';\n  }\n\n  return cssValue;\n}"]},"metadata":{},"sourceType":"script"}