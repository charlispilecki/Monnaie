{"ast":null,"code":"function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState() {\n    return _state;\n  }\n\n  function setState(state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) {\n        listeners[keys[i]](state);\n      }\n    }\n  } // subscribe to changes and return the subscriptionId\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.');\n    }\n\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId;\n  } // remove subscription by removing the listener function\n\n\n  function unsubscribe(id) {\n    delete listeners[id];\n  }\n\n  return {\n    getState: getState,\n    setState: setState,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n}\n\nexport default createBroadcast;","map":{"version":3,"sources":["C:/Users/medic/Desktop/CodingBootCamp/Homework/Monnaie/client/node_modules/brcast/dist/brcast.es.js"],"names":["createBroadcast","initialState","listeners","id","_state","getState","setState","state","keys","Object","i","len","length","subscribe","listener","Error","currentId","unsubscribe"],"mappings":"AAAA,SAASA,eAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,MAAM,GAAGH,YAAb;;AAEA,WAASI,QAAT,GAAqB;AACnB,WAAOD,MAAP;AACD;;AAED,WAASE,QAAT,CAAmBC,KAAnB,EAA0B;AACxBH,IAAAA,MAAM,GAAGG,KAAT;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,SAAZ,CAAX;AACA,QAAIQ,CAAC,GAAG,CAAR;AACA,QAAIC,GAAG,GAAGH,IAAI,CAACI,MAAf;;AACA,WAAOF,CAAC,GAAGC,GAAX,EAAgBD,CAAC,EAAjB,EAAqB;AACnB;AACA,UAAIR,SAAS,CAACM,IAAI,CAACE,CAAD,CAAL,CAAb,EAAwB;AAAER,QAAAA,SAAS,CAACM,IAAI,CAACE,CAAD,CAAL,CAAT,CAAmBH,KAAnB;AAA4B;AACvD;AACF,GAlBqC,CAoBtC;;;AACA,WAASM,SAAT,CAAoBC,QAApB,EAA8B;AAC5B,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,QAAIC,SAAS,GAAGb,EAAhB;AACAD,IAAAA,SAAS,CAACc,SAAD,CAAT,GAAuBF,QAAvB;AACAX,IAAAA,EAAE,IAAI,CAAN;AACA,WAAOa,SAAP;AACD,GA7BqC,CA+BtC;;;AACA,WAASC,WAAT,CAAsBd,EAAtB,EAA0B;AACxB,WAAOD,SAAS,CAACC,EAAD,CAAhB;AACD;;AAED,SAAO;AAAEE,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,IAAAA,QAAQ,EAAEA,QAAhC;AAA0CO,IAAAA,SAAS,EAAEA,SAArD;AAAgEI,IAAAA,WAAW,EAAEA;AAA7E,GAAP;AACD;;AAED,eAAejB,eAAf","sourcesContent":["function createBroadcast (initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState () {\n    return _state\n  }\n\n  function setState (state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) { listeners[keys[i]](state); }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe (listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.')\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe (id) {\n    delete listeners[id];\n  }\n\n  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }\n}\n\nexport default createBroadcast;\n"]},"metadata":{},"sourceType":"module"}